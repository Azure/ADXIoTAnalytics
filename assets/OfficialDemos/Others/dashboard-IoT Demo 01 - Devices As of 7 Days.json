{"$schema":"https://dataexplorer.azure.com/static/d/schema/33/dashboard.json","id":"1db66d78-0a3c-4140-9209-9d1178ee5cf4","eTag":"jE0Wcvx19rXAyzPMxK0uOg==","schema_version":"33","title":"IoT Demo 01 - Devices As of 7 Days","autoRefresh":{"defaultInterval":"30s","enabled":true},"sharedQueries":[],"tiles":[{"id":"34159cf8-442e-4d8b-a935-08332a4397ee","title":"Average Temp by Device","layout":{"x":0,"y":0,"width":24,"height":7},"pageId":"7658e83d-6543-4392-a053-deb93ca12496","visualType":"timechart","query":{"kind":"inline","dataSource":{"kind":"inline","dataSourceId":"e3b5b1f3-9572-45f3-989d-56b8f2300a76"},"usedVariables":["_deviceId","endTime","startTime"],"text":"// Please enter your KQL query (Example):\n// TableName | take 10\nThermostats\n| where EnqueuedTimeUTC between (startTime .. endTime)\n| where isempty(_deviceId) or DeviceId in (_deviceId)\n| summarize avg(Temp) by bin(EnqueuedTimeUTC,1m)\n| render timechart "},"visualOptions":{"hideTileTitle":false,"hideLegend":false,"xColumnTitle":"","xColumn":{"type":"infer"},"yColumns":{"type":"infer"},"seriesColumns":{"type":"infer"},"xAxisScale":"linear","verticalLine":"","crossFilterDisabled":false,"drillthroughDisabled":false,"multipleYAxes":{"base":{"id":"-1","label":"","columns":[],"yAxisMaximumValue":null,"yAxisMinimumValue":null,"yAxisScale":"linear","horizontalLines":[]},"additional":[],"showMultiplePanels":false},"pie__TopNSlices":null,"crossFilter":[],"drillthrough":[]}},{"id":"e0642811-9e53-4ec5-9e93-90ba3bc65315","title":"Is there any missing data at 1 min bin?","layout":{"x":0,"y":7,"width":24,"height":7},"pageId":"7658e83d-6543-4392-a053-deb93ca12496","visualType":"timechart","query":{"kind":"inline","dataSource":{"kind":"inline","dataSourceId":"e3b5b1f3-9572-45f3-989d-56b8f2300a76"},"usedVariables":["_deviceId","endTime","startTime"],"text":"//Is there any missing data? \n//make-series\n//Create series of specified aggregated values along specified axis.\nThermostats\n| where EnqueuedTimeUTC between (startTime .. endTime)\n| where isempty(_deviceId) or DeviceId in (_deviceId)\n| make-series AvgTemp=avg(Temp) on EnqueuedTimeUTC step 1m   \n| render timechart "},"visualOptions":{"yAxisMinimumValue":{"type":"infer"},"yAxisMaximumValue":{"type":"infer"},"hideTileTitle":false,"hideLegend":false,"xColumnTitle":"","xColumn":{"type":"infer"},"yColumns":{"type":"infer"},"seriesColumns":{"type":"infer"},"xAxisScale":"linear","verticalLine":"","crossFilterDisabled":false,"drillthroughDisabled":false,"multipleYAxes":{"base":{"id":"-1","columns":[],"label":"","yAxisMinimumValue":null,"yAxisMaximumValue":null,"yAxisScale":"linear","horizontalLines":[]},"additional":[],"showMultiplePanels":false},"pie__TopNSlices":null,"crossFilter":[],"drillthrough":[]}},{"id":"8b6b05f9-ff1d-4efd-b7f9-7821e4e884df","title":"Trend with linear interpolation of missing values in a series","layout":{"x":0,"y":14,"width":24,"height":7},"pageId":"7658e83d-6543-4392-a053-deb93ca12496","visualType":"timechart","query":{"kind":"inline","dataSource":{"kind":"inline","dataSourceId":"e3b5b1f3-9572-45f3-989d-56b8f2300a76"},"usedVariables":["_deviceId","endTime","startTime"],"text":"//How can I fill the missing values?\n//series_fill_linear()\n//Performs linear interpolation of missing values in a series.\nThermostats\n| where EnqueuedTimeUTC between (startTime .. endTime)\n| where isempty(_deviceId) or DeviceId in (_deviceId)\n| make-series AvgTemp=avg(Temp) default=real(null) on EnqueuedTimeUTC step 1m   \n| extend NoGapsAvgTemp=series_fill_linear(AvgTemp)\n| project EnqueuedTimeUTC, NoGapsAvgTemp\n| render timechart "},"visualOptions":{"yAxisMinimumValue":{"type":"infer"},"yAxisMaximumValue":{"type":"infer"},"hideTileTitle":false,"hideLegend":false,"xColumnTitle":"","xColumn":{"type":"infer"},"yColumns":{"type":"infer"},"seriesColumns":{"type":"infer"},"xAxisScale":"linear","verticalLine":"","crossFilterDisabled":false,"drillthroughDisabled":false,"multipleYAxes":{"base":{"id":"-1","columns":[],"label":"","yAxisMinimumValue":null,"yAxisMaximumValue":null,"yAxisScale":"linear","horizontalLines":[]},"additional":[],"showMultiplePanels":false},"pie__TopNSlices":null,"crossFilter":[],"drillthrough":[]}},{"id":"a4cb6662-f330-4bec-ab56-46bc4aa8a035","title":"Forecasting the next 15min by Time Series Decomposition","layout":{"x":0,"y":21,"width":9,"height":7},"pageId":"7658e83d-6543-4392-a053-deb93ca12496","visualType":"timechart","query":{"kind":"inline","dataSource":{"kind":"inline","dataSourceId":"e3b5b1f3-9572-45f3-989d-56b8f2300a76"},"usedVariables":["_deviceId","endTime","startTime"],"text":"//What will be the temprature for next one hour?\nThermostats\n| where EnqueuedTimeUTC between (startTime .. endTime)\n| where isempty(_deviceId) or DeviceId in (_deviceId)\n| make-series AvgTemp=avg(Temp) default=real(null) on EnqueuedTimeUTC from ago(5h) to now()+15m step 1m    \n| extend NoGapsAvgTemp=series_fill_linear(AvgTemp)\n| project EnqueuedTimeUTC, NoGapsAvgTemp\n| extend forecast = series_decompose_forecast(NoGapsAvgTemp, 15)\n| render timechart with(title='Forecasting the next 15min by Time Series Decmposition')\n"},"visualOptions":{"yAxisMinimumValue":{"type":"infer"},"yAxisMaximumValue":{"type":"infer"},"hideTileTitle":false,"hideLegend":false,"xColumnTitle":"","xColumn":{"type":"infer"},"yColumns":{"type":"infer"},"seriesColumns":{"type":"infer"},"xAxisScale":"linear","verticalLine":"","crossFilterDisabled":false,"drillthroughDisabled":false,"multipleYAxes":{"base":{"id":"-1","columns":[],"label":"","yAxisMinimumValue":null,"yAxisMaximumValue":null,"yAxisScale":"linear","horizontalLines":[]},"additional":[],"showMultiplePanels":false},"pie__TopNSlices":null,"crossFilter":[],"drillthrough":[]}},{"id":"79a1f212-9417-41ef-a4c0-832ba6887a2f","title":"Anomalies by Device","layout":{"x":9,"y":21,"width":15,"height":7},"pageId":"7658e83d-6543-4392-a053-deb93ca12496","visualType":"anomalychart","query":{"kind":"inline","dataSource":{"kind":"inline","dataSourceId":"e3b5b1f3-9572-45f3-989d-56b8f2300a76"},"usedVariables":["_deviceId","endTime","startTime"],"text":"//Are there any anomalies for this device?\nThermostats\n| where EnqueuedTimeUTC between (startTime .. endTime)\n| where isempty(_deviceId) or DeviceId in (_deviceId)\n| make-series AvgTemp=avg(Temp) default=real(null) on EnqueuedTimeUTC step 1m   \n| extend NoGapsAvgTemp=series_fill_linear(AvgTemp)\n| project EnqueuedTimeUTC, NoGapsAvgTemp\n| extend anomalies = series_decompose_anomalies(NoGapsAvgTemp,1) \n| render anomalychart with(anomalycolumns=anomalies)"},"visualOptions":{"yAxisMinimumValue":{"type":"infer"},"yAxisMaximumValue":{"type":"infer"},"hideTileTitle":false,"hideLegend":false,"xColumnTitle":"","xColumn":{"type":"infer"},"yColumns":{"type":"infer"},"seriesColumns":{"type":"infer"},"xAxisScale":"linear","verticalLine":"","crossFilterDisabled":false,"drillthroughDisabled":false,"multipleYAxes":{"base":{"id":"-1","columns":[],"label":"","yAxisMinimumValue":null,"yAxisMaximumValue":null,"yAxisScale":"linear","horizontalLines":[]},"additional":[],"showMultiplePanels":false},"pie__TopNSlices":null,"crossFilter":[],"drillthrough":[]}},{"id":"501eeee2-e68e-458b-acf6-9ae404885147","title":"AllAnomalies","layout":{"x":9,"y":28,"width":15,"height":7},"pageId":"7658e83d-6543-4392-a053-deb93ca12496","visualType":"table","query":{"kind":"inline","usedVariables":[],"text":"//What the anomalies I shoudl focus on across all devices?\nThermostats\n| where EnqueuedTimeUTC > ago(7d)\n| make-series AvgTemp=avg(Temp) default=real(null) on EnqueuedTimeUTC from ago(5h) to now() step 1m by DeviceId\n| extend NoGapsTemp=series_fill_linear(AvgTemp)\n| project EnqueuedTimeUTC, DeviceId, NoGapsTemp\n| extend anomalies = series_decompose_anomalies(NoGapsTemp, 1)\n| mv-expand EnqueuedTimeUTC, anomalies, NoGapsTemp\n| where anomalies == 1","dataSource":{"kind":"inline","dataSourceId":"e3b5b1f3-9572-45f3-989d-56b8f2300a76"}},"visualOptions":{"pie__TopNSlices":null}},{"id":"892dec93-e3f1-4ab4-b6e8-30a8c65fc0df","title":"Five Arbitrary Storms","visualType":"map","pageId":"e8b09c3b-a8cd-49a1-88c6-6563906e7015","layout":{"x":7,"y":0,"width":17,"height":8},"query":{"kind":"inline","dataSource":{"kind":"inline","dataSourceId":"b1782ec5-f9f5-4614-a688-d085d3618d49"},"usedVariables":[],"text":"StormEvents\n| take 5 \n| project BeginLon, BeginLat\n| render scatterchart with (kind=map)\n\n"},"visualOptions":{"hideLegend":false,"hideTileTitle":false,"map__type":"bubble","map__latitudeColumn":{"type":"infer"},"map__longitudeColumn":{"type":"infer"},"map__labelColumn":{"type":"infer"},"map__sizeColumn":{"type":"infer"},"map__sizeDisabled":true,"map__geoType":"infer","map__geoPointColumn":{"type":"infer"}}},{"id":"5a0b54b1-27d0-4869-807c-b22e03662b88","title":"Location in Polygon Coordinates","visualType":"card","pageId":"e8b09c3b-a8cd-49a1-88c6-6563906e7015","layout":{"x":0,"y":0,"width":7,"height":4},"query":{"kind":"inline","dataSource":{"kind":"inline","dataSourceId":"b1782ec5-f9f5-4614-a688-d085d3618d49"},"usedVariables":[],"text":"datatable(longitude:real, latitude:real, place:string)[\n    real(-73.985654), 40.748487, 'Empire State Building',           // In Polygon \n    real(-73.963249), 40.779525, 'The Metropolitan Museum of Art',  // In exterior of polygon\n    real(-73.874367), 40.777356, 'LaGuardia Airport',               // In exterior of polygon\n]\n| where geo_point_in_polygon(longitude, latitude, dynamic({\"type\":\"Polygon\",\"coordinates\":[[[-73.92597198486328,40.87821814104651],[-73.94691467285156,40.85069618625578],[-73.94691467285156,40.841865966890786],[-74.01008605957031,40.7519385984599],[-74.01866912841797,40.704586878965245],[-74.01214599609375,40.699901911003046],[-73.99772644042969,40.70875101828792],[-73.97747039794922,40.71083299030839],[-73.97026062011719,40.7290474687069],[-73.97506713867186,40.734510840309376],[-73.970947265625,40.74543623770158],[-73.94210815429688,40.77586181063573],[-73.9434814453125,40.78080140115127],[-73.92974853515625,40.79691751000055],[-73.93077850341797,40.804454347291006],[-73.93489837646484,40.80965166748853],[-73.93524169921875,40.837190668541105],[-73.92288208007812,40.85770758108904],[-73.9101791381836,40.871728144624974],[-73.92597198486328,40.87821814104651]],[[-73.95824432373047,40.80071852197889],[-73.98206233978271,40.76815921628347],[-73.97309303283691,40.76422632379533],[-73.94914627075195,40.796949998204596],[-73.95824432373047,40.80071852197889]]]}))\n| project place\n\n"},"visualOptions":{"hideTileTitle":false,"multiStat__textSize":"auto","multiStat__valueColumn":{"type":"infer"},"colorRulesDisabled":false,"colorRules":[],"colorStyle":"light"}},{"id":"6592f0ea-ed50-487c-a4ed-cc01a1cb5ad8","title":"Distance between 2 points","visualType":"card","pageId":"e8b09c3b-a8cd-49a1-88c6-6563906e7015","layout":{"x":0,"y":4,"width":7,"height":4},"query":{"kind":"inline","dataSource":{"kind":"inline","dataSourceId":"b1782ec5-f9f5-4614-a688-d085d3618d49"},"usedVariables":[],"text":"//calc distance between 2 cities\nlet stuttgart=dynamic({\"longitude\":9.182552,\"latitude\":48.771449});\nlet munich=dynamic({\"longitude\":11.582676,\"latitude\":48.130847});\nprint dist=strcat(toint(geo_distance_2points(\n    todouble(stuttgart.longitude), todouble(stuttgart.latitude),\n    todouble(munich.longitude), todouble(munich.latitude)\n    )/1000), ' km')\n\n"},"visualOptions":{"hideTileTitle":false,"multiStat__textSize":"auto","multiStat__valueColumn":{"type":"infer"},"colorRulesDisabled":false,"colorRules":[{"id":"f018baf6-eedd-4cc4-89c0-9e395ab370ba","ruleType":"colorByCondition","applyToColumn":null,"hideText":false,"applyTo":"cells","conditions":[{"operator":">","column":null,"values":["100"]}],"chainingOperator":"and","visualType":"stat","colorStyle":"bold","color":"yellow","tag":"","icon":"plane","ruleName":""}],"colorStyle":"light"}},{"id":"ba4977df-7c30-4f04-8e35-132378667acb","title":"Storms on a Line","visualType":"map","pageId":"e8b09c3b-a8cd-49a1-88c6-6563906e7015","layout":{"x":0,"y":8,"width":12,"height":8},"query":{"kind":"inline","dataSource":{"kind":"inline","dataSourceId":"b1782ec5-f9f5-4614-a688-d085d3618d49"},"usedVariables":[],"text":"// Show nearby storms on a linestring\nlet roadToKeyWest = dynamic({\n\"type\":\"linestring\",\n\"coordinates\":[\n          [\n            -81.79595947265625,\n            24.56461038017685\n          ],\n          [\n            -81.595458984375,\n            24.627044746156027\n          ],\n          [\n            -81.52130126953125,\n            24.666986385216273\n          ],\n          [\n            -81.35650634765625,\n            24.66449040712424\n          ],\n          [\n            -81.32354736328125,\n            24.647017162630366\n          ],\n          [\n            -80.8099365234375,\n            24.821639356846607\n          ],\n          [\n            -80.62042236328125,\n            24.93127614538456\n          ],\n          [\n            -80.37872314453125,\n            25.175116531621764\n          ],\n          [\n            -80.42266845703124,\n            25.19251511519153\n          ],\n          [\n            -80.4803466796875,\n            25.46063471847754\n          ]\n        ]});\nStormEvents\n| where isnotempty(BeginLat) and isnotempty(BeginLon)\n| project BeginLon, BeginLat, EventType\n| where geo_distance_point_to_line(BeginLon, BeginLat, roadToKeyWest) < 500\n| render scatterchart with (kind=map)\n\n"},"visualOptions":{"hideLegend":false}},{"id":"65be6f71-49a1-4572-81a5-7f2f4dfac8f1","title":"Nearby Storms on a Polygon","visualType":"map","pageId":"e8b09c3b-a8cd-49a1-88c6-6563906e7015","layout":{"x":12,"y":8,"width":12,"height":8},"query":{"kind":"inline","dataSource":{"kind":"inline","dataSourceId":"b1782ec5-f9f5-4614-a688-d085d3618d49"},"usedVariables":[],"text":"// Show nearby storms on a polygon\n// http://geojson.io/#map=9/24.5808/-81.1066\nlet roadToKeyWest = dynamic({\n\"type\":\"polygon\",\n\"coordinates\":[\n          [\n            [\n              -80.08209228515625,\n              25.39117928167583\n            ],\n            [\n              -80.4913330078125,\n              25.517657429994035\n            ],\n            [\n              -80.57922363281249,\n              25.477992320574817\n            ],\n            [\n              -82.188720703125,\n              24.632038149596895\n            ],\n            [\n              -82.1942138671875,\n              24.53712939907993\n            ],\n            [\n              -82.13104248046875,\n              24.412140070651528\n            ],\n            [\n              -81.81243896484375,\n              24.43714786161562\n            ],\n            [\n              -80.58746337890625,\n              24.794214972389486\n            ],\n            [\n              -80.08209228515625,\n              25.39117928167583\n            ]\n          ]\n        ]});\nStormEvents\n| where isnotempty(BeginLat) and isnotempty(BeginLon)\n| project BeginLon, BeginLat, EventType\n| where geo_distance_point_to_polygon(BeginLon, BeginLat, roadToKeyWest) < 500\n| render scatterchart with (kind=map)\n\n"},"visualOptions":{"hideLegend":false}},{"id":"16378c3a-b6fb-4ae6-9c42-176f9ba64805","title":"Geoclustering","visualType":"map","pageId":"e8b09c3b-a8cd-49a1-88c6-6563906e7015","layout":{"x":0,"y":16,"width":12,"height":8},"query":{"kind":"inline","dataSource":{"kind":"inline","dataSourceId":"b1782ec5-f9f5-4614-a688-d085d3618d49"},"usedVariables":[],"text":"// Geoclustering\nStormEvents\n| project BeginLon, BeginLat, EventType\n| where geo_point_in_circle(BeginLon, BeginLat, real(-81.3891), 28.5346, 1000*100)\n| summarize count() by EventType, hash=geo_point_to_s2cell(BeginLon,BeginLat)\n| project geo_s2cell_to_central_point(hash), count_, EventType\n| render piechart with (kind=map)\n\n"},"visualOptions":{"hideLegend":false}},{"id":"fe5e76ff-14ab-4ac4-8187-09bacae8c2ff","title":"Typical use-case","visualType":"anomalychart","pageId":"e8b09c3b-a8cd-49a1-88c6-6563906e7015","layout":{"x":12,"y":16,"width":12,"height":8},"query":{"kind":"inline","dataSource":{"kind":"inline","dataSourceId":"b1782ec5-f9f5-4614-a688-d085d3618d49"},"usedVariables":[],"text":"// typical use-case\nlet interestingState = \"Texas\";\nlet statePolygon = materialize(US_States\n    | extend name = tostring(features.properties.NAME)\n    | where name == interestingState\n    | project geometry=features.geometry);\nlet stateCoveringS2cells = statePolygon\n    | project s2Cells = geo_polygon_to_s2cells(geometry,9);\nStormEvents\n| extend s2Cell = geo_point_to_s2cell(BeginLon, BeginLat, 9)\n| where s2Cell in (stateCoveringS2cells)\n| where geo_point_in_polygon(BeginLon, BeginLat, toscalar(statePolygon))\n| make-series damage = avg(DamageProperty + DamageCrops) default = double(0.0) on StartTime step 7d\n| extend anomalies=series_decompose_anomalies(damage)\n| render anomalychart with (anomalycolumns=anomalies)\n\n"},"visualOptions":{"hideLegend":false}},{"id":"5aa0f915-113a-479a-85b7-55aeabf0e89c","title":"Fun","visualType":"map","pageId":"e8b09c3b-a8cd-49a1-88c6-6563906e7015","layout":{"x":0,"y":24,"width":24,"height":12},"query":{"kind":"inline","dataSource":{"kind":"inline","dataSourceId":"b1782ec5-f9f5-4614-a688-d085d3618d49"},"usedVariables":[],"text":"// Fun \n// Draw a KUSTO somewhere in the planet\n// http://geojson.io/#map=6/38.968/-23.950\nlet k = dynamic({\"type\":\"polygon\",\"coordinates\":[\n          [\n            [\n              -68.5986328125,\n              41.376808565702355\n            ],\n            [\n              -69.521484375,\n              30.789036751261136\n            ],\n            [\n              -67.32421875,\n              30.90222470517144\n            ],\n            [\n              -66.884765625,\n              35.137879119634185\n            ],\n            [\n              -64.2041015625,\n              31.090574094954192\n            ],\n            [\n              -62.1826171875,\n              30.977609093348686\n            ],\n            [\n              -65.654296875,\n              36.56260003738545\n            ],\n            [\n              -61.8310546875,\n              41.0130657870063\n            ],\n            [\n              -64.423828125,\n              41.1455697310095\n            ],\n            [\n              -66.796875,\n              38.16911413556086\n            ],\n            [\n              -66.26953125,\n              41.50857729743935\n            ],\n            [\n              -68.5986328125,\n              41.376808565702355\n            ]\n          ]\n        ]});\nlet u = dynamic({\"type\":\"polygon\",\"coordinates\":[\n          [\n            [\n              -58.84277343749999,\n              40.94671366508002\n            ],\n            [\n              -59.150390625,\n              32.99023555965106\n            ],\n            [\n              -57.568359375,\n              31.12819929911196\n            ],\n            [\n              -52.8662109375,\n              31.090574094954192\n            ],\n            [\n              -51.8115234375,\n              32.879587173066305\n            ],\n            [\n              -51.328125,\n              40.97989806962013\n            ],\n            [\n              -53.3935546875,\n              40.94671366508002\n            ],\n            [\n              -53.9208984375,\n              33.02708758002874\n            ],\n            [\n              -56.865234375,\n              32.99023555965106\n            ],\n            [\n              -56.4697265625,\n              41.04621681452063\n            ],\n            [\n              -58.84277343749999,\n              40.94671366508002\n            ]\n          ]\n        ]});\nlet s = dynamic({\"type\":\"polygon\",\"coordinates\":[\n          [\n            [\n              -40.53955078125,\n              40.51379915504413\n            ],\n            [\n              -42.12158203124999,\n              41.178653972331674\n            ],\n            [\n              -45.8349609375,\n              41.062786068733026\n            ],\n            [\n              -47.13134765625,\n              39.80853604144591\n            ],\n            [\n              -47.63671875,\n              38.42777351132902\n            ],\n            [\n              -46.73583984375,\n              37.47485808497102\n            ],\n            [\n              -43.5498046875,\n              36.61552763134925\n            ],\n            [\n              -42.0556640625,\n              36.13787471840729\n            ],\n            [\n              -42.07763671875,\n              35.0120020431607\n            ],\n            [\n              -43.6376953125,\n              34.470335121217474\n            ],\n            [\n              -45.26367187499999,\n              34.831841149828655\n            ],\n            [\n              -46.0986328125,\n              35.31736632923788\n            ],\n            [\n              -47.4609375,\n              34.56085936708384\n            ],\n            [\n              -47.04345703125,\n              32.82421110161336\n            ],\n            [\n              -45.3076171875,\n              31.970803930433096\n            ],\n            [\n              -43.154296875,\n              31.484893386890164\n            ],\n            [\n              -41.37451171875,\n              31.690781806136822\n            ],\n            [\n              -39.6826171875,\n              32.509761735919426\n            ],\n            [\n              -39.04541015625,\n              34.27083595165\n            ],\n            [\n              -39.0234375,\n              36.40359962073253\n            ],\n            [\n              -39.46289062499999,\n              37.26530995561875\n            ],\n            [\n              -42.34130859375,\n              37.97884504049713\n            ],\n            [\n              -44.40673828125,\n              38.75408327579141\n            ],\n            [\n              -44.2529296875,\n              39.45316112807394\n            ],\n            [\n              -43.00048828125,\n              39.757879992021756\n            ],\n            [\n              -41.8359375,\n              39.18117526158749\n            ],\n            [\n              -40.75927734375,\n              38.634036452919226\n            ],\n            [\n              -39.4189453125,\n              40.01078714046552\n            ],\n            [\n              -40.53955078125,\n              40.51379915504413\n            ]\n          ]\n        ]});\nlet t = dynamic({\"type\":\"polygon\",\"coordinates\":[\n          [\n            [\n              -36.71630859375,\n              41.062786068733026\n            ],\n            [\n              -36.826171875,\n              39.30029918615029\n            ],\n            [\n              -33.5302734375,\n              39.38526381099774\n            ],\n            [\n              -33.55224609375,\n              31.914867503276223\n            ],\n            [\n              -29.8828125,\n              31.87755764334002\n            ],\n            [\n              -30.41015625,\n              39.317300373271024\n            ],\n            [\n              -27.94921875,\n              39.41922073655956\n            ],\n            [\n              -27.79541015625,\n              41.062786068733026\n            ],\n            [\n              -36.71630859375,\n              41.062786068733026\n            ]\n          ]\n        ]});\nlet o = dynamic({\"type\":\"polygon\",\"coordinates\":[\n          [\n            [\n              -21.9287109375,\n              41.062786068733026\n            ],\n            [\n              -24.477539062499996,\n              40.16208338164617\n            ],\n            [\n              -25.64208984375,\n              38.03078569382294\n            ],\n            [\n              -25.6201171875,\n              35.209721645221386\n            ],\n            [\n              -25.64208984375,\n              32.91648534731439\n            ],\n            [\n              -24.5654296875,\n              32.045332838858506\n            ],\n            [\n              -21.26953125,\n              31.840232667909365\n            ],\n            [\n              -17.2705078125,\n              32.37996146435729\n            ],\n            [\n              -16.80908203125,\n              34.50655662164561\n            ],\n            [\n              -15.8203125,\n              37.579412513438385\n            ],\n            [\n              -17.42431640625,\n              40.763901280945866\n            ],\n            [\n              -20.58837890625,\n              41.27780646738183\n            ],\n            [\n              -20.8740234375,\n              40.17887331434696\n            ],\n            [\n              -18.65478515625,\n              39.690280594818034\n            ],\n            [\n              -18.08349609375,\n              38.272688535980976\n            ],\n            [\n              -18.39111328125,\n              35.10193405724606\n            ],\n            [\n              -20.456542968749996,\n              33.797408767572485\n            ],\n            [\n              -21.708984375,\n              34.016241889667015\n            ],\n            [\n              -23.2470703125,\n              34.30714385628804\n            ],\n            [\n              -24.1259765625,\n              36.65079252503471\n            ],\n            [\n              -23.818359375,\n              38.58252615935333\n            ],\n            [\n              -22.56591796875,\n              39.85915479295669\n            ],\n            [\n              -21.26953125,\n              40.195659093364654\n            ],\n            [\n              -20.9619140625,\n              41.29431726315258\n            ],\n            [\n              -21.9287109375,\n              41.062786068733026\n            ]\n          ]\n        ]});\nrange i from 1 to 100000 step 1\n| project lng = rand() * real(-100), lat = rand()*100\n| where lng between (real(-68) .. real(-10)) and lat between(27 .. 42)\n| where geo_point_in_polygon(lng, lat, k) or\n        geo_point_in_polygon(lng, lat, u) or\n        geo_point_in_polygon(lng, lat, s) or\n        geo_point_in_polygon(lng, lat, t) or\n        geo_point_in_polygon(lng, lat, o) \n| extend val = rand(6)\n| render scatterchart with (kind=map , legend=hidden )\n\n"},"visualOptions":{"hideLegend":true}}],"parameters":[{"kind":"duration","id":"c3ddff10-0097-42ec-b587-d06e863830d9","displayName":"Time range","beginVariableName":"startTime","endVariableName":"endTime","defaultValue":{"kind":"dynamic","count":24,"unit":"hours"},"showOnPages":{"kind":"all"}},{"kind":"string","id":"f1b332cb-bae4-45a6-a057-4049b8432fe2","displayName":"DeviceId","variableName":"_deviceId","selectionType":"array","includeAllOption":true,"defaultValue":{"kind":"all"},"dataSource":{"kind":"query","query":{"kind":"inline","dataSource":{"kind":"inline","dataSourceId":"e3b5b1f3-9572-45f3-989d-56b8f2300a76"},"usedVariables":[],"text":"// Please enter your KQL query (Example):\n// TableName | take 10\nThermostats\n| where EnqueuedTimeUTC > ago(7d)\n| distinct DeviceId\n| order by DeviceId asc \n"},"columns":{"value":"DeviceId"}},"showOnPages":{"kind":"all"}}],"dataSources":[{"id":"e3b5b1f3-9572-45f3-989d-56b8f2300a76","name":"igniteadxsource.eastus2","scopeId":"kusto","kind":"manual-kusto","clusterUri":"https://igniteadxsource.eastus2.kusto.windows.net/","database":"Occupancy"},{"id":"b1782ec5-f9f5-4614-a688-d085d3618d49","name":"Samples","scopeId":"kusto","clusterUri":"https://help.kusto.windows.net/","database":"Samples","kind":"manual-kusto"}],"pages":[{"name":"IoT","id":"7658e83d-6543-4392-a053-deb93ca12496"},{"name":"Geospacial","id":"e8b09c3b-a8cd-49a1-88c6-6563906e7015"}]}