#connect cluster('help.kusto.windows.net').database('Samples')

// Ask:
// 1. Any plans for more sophisticated graphs? Overlay 2 graph types on top of each other.
// 2. Be able to specify custom string for value in graph(e.g. use format_bytes on data so that the graph shows GB number instead of the byte number)


///////////////////////////
// Overlay 2 graph types //
///////////////////////////

// 1. dashboard (https://aka.ms/uservoice > submit/upvote to priotize)
// 2. plotly https://techcommunity.microsoft.com/t5/azure-data-explorer-blog/plotly-visualizations-in-azure-data-explorer/ba-p/3717768
// 3. ysplit=panels
// 4. treemap (maybe...)

// series_decompose - manifest periodic and trend behaviour.
// uses series_outliers uses Tukey's fence test. >1.5 or <-1.5 is mild, >3.0 or <-3.0 is strong score.
let min_t = datetime(2017-01-05);
let max_t = datetime(2017-02-03 22:00);
let dt = 2h;
demo_make_series2
| make-series num=avg(num) on TimeStamp from min_t to max_t step dt by sid 
| where sid == 'TS1'
| extend (baseline, seasonal, trend, residual) = series_decompose(num, -1, 'linefit')  
| render timechart with(title='Web app. traffic of a month, decomposition', ysplit=panels)


// ie. overlay an event such as app-release as a vertical line, over vm cpu by time.

// manual into visual
let min_t = toscalar(demo_make_series1 | summarize min(TimeStamp));
let max_t = toscalar(demo_make_series1 | summarize max(TimeStamp));
demo_make_series1
| make-series num=count() default=0 on TimeStamp from min_t to max_t step 1h by OsVer
| render timechart
// click table, grab sample value for x-axis vertical line value.
// but this is only 1 instance, what if you need to plot multiple events & dynamically from the data?

// see event marker w/ note in tooltip ðŸ’–
let releases = datatable (TimeStamp:datetime, note:string, metric:int) [
datetime(2016-08-21T21:01:35.206Z), 'hello world', 3000,
datetime(2016-09-01T10:03:31.586Z), 'app 1.0', 3000
];
demo_make_series1
| lookup releases on TimeStamp
| make-series num=count() , m=sum(metric) on TimeStamp step 1h by OsVer, note
| render timechart 

// see vertical lines ðŸ”¥
let releases = datatable (TimeStamp:datetime, note:double, metric:int) [
datetime(2016-08-21T21:01:35.206Z), 1.2, 3000,
datetime(2016-09-01T10:03:31.586Z), 2.3, 3000
];
demo_make_series1
| lookup releases on TimeStamp
| make-series num=count() , m=sum(metric) on TimeStamp step 1h by OsVer, note
| render timechart 

// more timeseries samples: 
// https://learn.microsoft.com/azure/data-explorer/kusto/query/time-series-analysis
// https://github.com/Azure/ADXIoTAnalytics/blob/main/assets/OfficialDemos/Others/Time_Series.kql


//KE Desktop App
StormEvents
| summarize StormEvents=count() by EventType, State
| sort by StormEvents
| limit 30
| render treemap with(title="Storm Events by EventType and State")


/////////////////////////
// Graph Custom String //
/////////////////////////


// 1. format_bytes & split
.show table Trips extents 
| summarize size=format_bytes(sum(OriginalSize),0,'GB'), compressed=format_bytes(sum(CompressedSize),0,'GB') by TableName
| extend split(size,' '), split(compressed,' ')
| extend snum=toint(size[0]), unit=tostring(size[1])
| render barchart with(xcolumn=TableName, ycolumns=snum)


// 2. unit in hearder
datatable (GBs:int, label:string)[
1, ' server1',
200, ' server2'
] 
| render columnchart  with(xcolumn=label, ycolumns=GBs)

// 3. unit in value
datatable (num:int, size:string, tname:string)[
1024, ' GB',
200, ' GB'
] 
| render barchart  with(xcolumn=size, ycolumns=num)
