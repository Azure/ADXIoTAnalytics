// https://www.youtube.com/watch?v=ABJ1gjXAK54
// https://learn.microsoft.com/en-us/azure/data-explorer/kusto/query/geospatial-grid-systems


StormEvents
| take 100 
| project BeginLon, BeginLat
| render scatterchart with (kind=map)


datatable(longitude:real, latitude:real, place:string)[
    real(-73.985654), 40.748487, 'Empire State Building',           // In Polygon 
    real(-73.963249), 40.779525, 'The Metropolitan Museum of Art',  // In exterior of polygon
    real(-73.874367), 40.777356, 'LaGuardia Airport',               // In exterior of polygon
]
| where geo_point_in_polygon(longitude, latitude, dynamic({"type":"Polygon","coordinates":[[[-73.92597198486328,40.87821814104651],[-73.94691467285156,40.85069618625578],[-73.94691467285156,40.841865966890786],[-74.01008605957031,40.7519385984599],[-74.01866912841797,40.704586878965245],[-74.01214599609375,40.699901911003046],[-73.99772644042969,40.70875101828792],[-73.97747039794922,40.71083299030839],[-73.97026062011719,40.7290474687069],[-73.97506713867186,40.734510840309376],[-73.970947265625,40.74543623770158],[-73.94210815429688,40.77586181063573],[-73.9434814453125,40.78080140115127],[-73.92974853515625,40.79691751000055],[-73.93077850341797,40.804454347291006],[-73.93489837646484,40.80965166748853],[-73.93524169921875,40.837190668541105],[-73.92288208007812,40.85770758108904],[-73.9101791381836,40.871728144624974],[-73.92597198486328,40.87821814104651]],[[-73.95824432373047,40.80071852197889],[-73.98206233978271,40.76815921628347],[-73.97309303283691,40.76422632379533],[-73.94914627075195,40.796949998204596],[-73.95824432373047,40.80071852197889]]]}))
| project place


//calc distance between 2 cities
let stuttgart=dynamic({"longitude":9.182552,"latitude":48.771449});
let munich=dynamic({"longitude":11.582676,"latitude":48.130847});
print dist=strcat(toint(geo_distance_2points(
    todouble(stuttgart.longitude), todouble(stuttgart.latitude),
    todouble(munich.longitude), todouble(munich.latitude)
    )/1000), ' km')


// Show nearby storms on a linestring
let roadToKeyWest = dynamic({
"type":"linestring",
"coordinates":[
          [
            -81.79595947265625,
            24.56461038017685
          ],
          [
            -81.595458984375,
            24.627044746156027
          ],
          [
            -81.52130126953125,
            24.666986385216273
          ],
          [
            -81.35650634765625,
            24.66449040712424
          ],
          [
            -81.32354736328125,
            24.647017162630366
          ],
          [
            -80.8099365234375,
            24.821639356846607
          ],
          [
            -80.62042236328125,
            24.93127614538456
          ],
          [
            -80.37872314453125,
            25.175116531621764
          ],
          [
            -80.42266845703124,
            25.19251511519153
          ],
          [
            -80.4803466796875,
            25.46063471847754
          ]
        ]});
StormEvents
| where isnotempty(BeginLat) and isnotempty(BeginLon)
| project BeginLon, BeginLat, EventType
| where geo_distance_point_to_line(BeginLon, BeginLat, roadToKeyWest) < 500
| render scatterchart with (kind=map)



// Show nearby storms on a polygon
// http://geojson.io/#map=9/24.5808/-81.1066
let roadToKeyWest = dynamic({
"type":"polygon",
"coordinates":[
          [
            [
              -80.08209228515625,
              25.39117928167583
            ],
            [
              -80.4913330078125,
              25.517657429994035
            ],
            [
              -80.57922363281249,
              25.477992320574817
            ],
            [
              -82.188720703125,
              24.632038149596895
            ],
            [
              -82.1942138671875,
              24.53712939907993
            ],
            [
              -82.13104248046875,
              24.412140070651528
            ],
            [
              -81.81243896484375,
              24.43714786161562
            ],
            [
              -80.58746337890625,
              24.794214972389486
            ],
            [
              -80.08209228515625,
              25.39117928167583
            ]
          ]
        ]});
StormEvents
| where isnotempty(BeginLat) and isnotempty(BeginLon)
| project BeginLon, BeginLat, EventType
| where geo_distance_point_to_polygon(BeginLon, BeginLat, roadToKeyWest) < 500
| render scatterchart with (kind=map)



// Geoclustering
StormEvents
| project BeginLon, BeginLat, EventType
| where geo_point_in_circle(BeginLon, BeginLat, real(-81.3891), 28.5346, 1000*100)
| summarize count() by EventType, hash=geo_point_to_s2cell(BeginLon,BeginLat)
| project geo_s2cell_to_central_point(hash), count_, EventType
| render piechart with (kind=map)


// typical use-case
let interestingState = "Texas";
let statePolygon = materialize(US_States
    | extend name = tostring(features.properties.NAME)
    | where name == interestingState
    | project geometry=features.geometry);
let stateCoveringS2cells = statePolygon
    | project s2Cells = geo_polygon_to_s2cells(geometry,9);
StormEvents
| extend s2Cell = geo_point_to_s2cell(BeginLon, BeginLat, 9)
| where s2Cell in (stateCoveringS2cells)
| where geo_point_in_polygon(BeginLon, BeginLat, toscalar(statePolygon))
| make-series damage = avg(DamageProperty + DamageCrops) default = double(0.0) on StartTime step 7d
| extend anomalies=series_decompose_anomalies(damage)
| render anomalychart with (anomalycolumns=anomalies)


// Fun 
// Draw a KUSTO somewhere in the planet
// http://geojson.io/#map=6/38.968/-23.950
let k = dynamic({"type":"polygon","coordinates":[
          [
            [
              -68.5986328125,
              41.376808565702355
            ],
            [
              -69.521484375,
              30.789036751261136
            ],
            [
              -67.32421875,
              30.90222470517144
            ],
            [
              -66.884765625,
              35.137879119634185
            ],
            [
              -64.2041015625,
              31.090574094954192
            ],
            [
              -62.1826171875,
              30.977609093348686
            ],
            [
              -65.654296875,
              36.56260003738545
            ],
            [
              -61.8310546875,
              41.0130657870063
            ],
            [
              -64.423828125,
              41.1455697310095
            ],
            [
              -66.796875,
              38.16911413556086
            ],
            [
              -66.26953125,
              41.50857729743935
            ],
            [
              -68.5986328125,
              41.376808565702355
            ]
          ]
        ]});
let u = dynamic({"type":"polygon","coordinates":[
          [
            [
              -58.84277343749999,
              40.94671366508002
            ],
            [
              -59.150390625,
              32.99023555965106
            ],
            [
              -57.568359375,
              31.12819929911196
            ],
            [
              -52.8662109375,
              31.090574094954192
            ],
            [
              -51.8115234375,
              32.879587173066305
            ],
            [
              -51.328125,
              40.97989806962013
            ],
            [
              -53.3935546875,
              40.94671366508002
            ],
            [
              -53.9208984375,
              33.02708758002874
            ],
            [
              -56.865234375,
              32.99023555965106
            ],
            [
              -56.4697265625,
              41.04621681452063
            ],
            [
              -58.84277343749999,
              40.94671366508002
            ]
          ]
        ]});
let s = dynamic({"type":"polygon","coordinates":[
          [
            [
              -40.53955078125,
              40.51379915504413
            ],
            [
              -42.12158203124999,
              41.178653972331674
            ],
            [
              -45.8349609375,
              41.062786068733026
            ],
            [
              -47.13134765625,
              39.80853604144591
            ],
            [
              -47.63671875,
              38.42777351132902
            ],
            [
              -46.73583984375,
              37.47485808497102
            ],
            [
              -43.5498046875,
              36.61552763134925
            ],
            [
              -42.0556640625,
              36.13787471840729
            ],
            [
              -42.07763671875,
              35.0120020431607
            ],
            [
              -43.6376953125,
              34.470335121217474
            ],
            [
              -45.26367187499999,
              34.831841149828655
            ],
            [
              -46.0986328125,
              35.31736632923788
            ],
            [
              -47.4609375,
              34.56085936708384
            ],
            [
              -47.04345703125,
              32.82421110161336
            ],
            [
              -45.3076171875,
              31.970803930433096
            ],
            [
              -43.154296875,
              31.484893386890164
            ],
            [
              -41.37451171875,
              31.690781806136822
            ],
            [
              -39.6826171875,
              32.509761735919426
            ],
            [
              -39.04541015625,
              34.27083595165
            ],
            [
              -39.0234375,
              36.40359962073253
            ],
            [
              -39.46289062499999,
              37.26530995561875
            ],
            [
              -42.34130859375,
              37.97884504049713
            ],
            [
              -44.40673828125,
              38.75408327579141
            ],
            [
              -44.2529296875,
              39.45316112807394
            ],
            [
              -43.00048828125,
              39.757879992021756
            ],
            [
              -41.8359375,
              39.18117526158749
            ],
            [
              -40.75927734375,
              38.634036452919226
            ],
            [
              -39.4189453125,
              40.01078714046552
            ],
            [
              -40.53955078125,
              40.51379915504413
            ]
          ]
        ]});
let t = dynamic({"type":"polygon","coordinates":[
          [
            [
              -36.71630859375,
              41.062786068733026
            ],
            [
              -36.826171875,
              39.30029918615029
            ],
            [
              -33.5302734375,
              39.38526381099774
            ],
            [
              -33.55224609375,
              31.914867503276223
            ],
            [
              -29.8828125,
              31.87755764334002
            ],
            [
              -30.41015625,
              39.317300373271024
            ],
            [
              -27.94921875,
              39.41922073655956
            ],
            [
              -27.79541015625,
              41.062786068733026
            ],
            [
              -36.71630859375,
              41.062786068733026
            ]
          ]
        ]});
let o = dynamic({"type":"polygon","coordinates":[
          [
            [
              -21.9287109375,
              41.062786068733026
            ],
            [
              -24.477539062499996,
              40.16208338164617
            ],
            [
              -25.64208984375,
              38.03078569382294
            ],
            [
              -25.6201171875,
              35.209721645221386
            ],
            [
              -25.64208984375,
              32.91648534731439
            ],
            [
              -24.5654296875,
              32.045332838858506
            ],
            [
              -21.26953125,
              31.840232667909365
            ],
            [
              -17.2705078125,
              32.37996146435729
            ],
            [
              -16.80908203125,
              34.50655662164561
            ],
            [
              -15.8203125,
              37.579412513438385
            ],
            [
              -17.42431640625,
              40.763901280945866
            ],
            [
              -20.58837890625,
              41.27780646738183
            ],
            [
              -20.8740234375,
              40.17887331434696
            ],
            [
              -18.65478515625,
              39.690280594818034
            ],
            [
              -18.08349609375,
              38.272688535980976
            ],
            [
              -18.39111328125,
              35.10193405724606
            ],
            [
              -20.456542968749996,
              33.797408767572485
            ],
            [
              -21.708984375,
              34.016241889667015
            ],
            [
              -23.2470703125,
              34.30714385628804
            ],
            [
              -24.1259765625,
              36.65079252503471
            ],
            [
              -23.818359375,
              38.58252615935333
            ],
            [
              -22.56591796875,
              39.85915479295669
            ],
            [
              -21.26953125,
              40.195659093364654
            ],
            [
              -20.9619140625,
              41.29431726315258
            ],
            [
              -21.9287109375,
              41.062786068733026
            ]
          ]
        ]});
range i from 1 to 100000 step 1
| project lng = rand() * real(-100), lat = rand()*100
| where lng between (real(-68) .. real(-10)) and lat between(27 .. 42)
| where geo_point_in_polygon(lng, lat, k) or
        geo_point_in_polygon(lng, lat, u) or
        geo_point_in_polygon(lng, lat, s) or
        geo_point_in_polygon(lng, lat, t) or
        geo_point_in_polygon(lng, lat, o) 
| extend val = rand(6)
| render scatterchart with (kind=map , legend=hidden )
